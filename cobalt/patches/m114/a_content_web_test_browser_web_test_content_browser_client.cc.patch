diff --git a/content/web_test/browser/web_test_content_browser_client.cc b/content/web_test/browser/web_test_content_browser_client.cc
index 48a07780e6146..328e22ec56a74 100644
--- a/content/web_test/browser/web_test_content_browser_client.cc
+++ b/content/web_test/browser/web_test_content_browser_client.cc
@@ -95,6 +95,11 @@
 #include "sandbox/win/src/sandbox.h"
 #endif
 
+#if BUILDFLAG(IS_COBALT)
+#include "cobalt/browser/h5vcc_runtime/public/mojom/h5vcc_runtime.mojom.h"
+#include "cobalt/testing/h5vcc_runtime/stub_h5vcc_runtime_impl.h"
+#endif
+
 namespace content {
 namespace {
 
@@ -536,6 +541,10 @@ void WebTestContentBrowserClient::RegisterBrowserInterfaceBindersForFrame(
       base::BindRepeating(
           &WebTestContentBrowserClient::BindAttributionReportingAutomation,
           base::Unretained(this)));
+#if BUILDFLAG(IS_COBALT)
+  map->Add<h5vcc_runtime::mojom::H5vccRuntime>(base::BindRepeating(
+      &WebTestContentBrowserClient::BindH5vccRuntime, base::Unretained(this)));
+#endif
 }
 
 bool WebTestContentBrowserClient::CanAcceptUntrustedExchangesIfNeeded() {
@@ -598,6 +607,16 @@ void WebTestContentBrowserClient::BindAttributionReportingAutomation(
       std::move(receiver));
 }
 
+#if BUILDFLAG(IS_COBALT)
+void WebTestContentBrowserClient::BindH5vccRuntime(
+    RenderFrameHost* render_frame_host,
+    mojo::PendingReceiver<h5vcc_runtime::mojom::H5vccRuntime> receiver) {
+  if (!stub_h5vcc_runtime_impl_)
+    stub_h5vcc_runtime_impl_ = std::make_unique<StubH5vccRuntimeImpl>();
+  stub_h5vcc_runtime_impl_->Bind(std::move(receiver));
+}
+#endif
+
 std::unique_ptr<LoginDelegate> WebTestContentBrowserClient::CreateLoginDelegate(
     const net::AuthChallengeInfo& auth_info,
     content::WebContents* web_contents,
