diff --git a/net/BUILD.gn b/net/BUILD.gn
index 355767d5e548f..291455113c6da 100644
--- a/net/BUILD.gn
+++ b/net/BUILD.gn
@@ -36,10 +36,10 @@ if (is_android) {
 # Writable mmap isn't supported on Fuchsia, so it should be bypassed.
 posix_bypass_mmap = (is_android && current_cpu != "x86") || is_fuchsia
 
-enable_built_in_dns = use_blink
+enable_built_in_dns = use_blink && !is_starboard
 
 # Unix sockets are not supported on iOS.
-enable_unix_sockets = is_posix && !is_ios
+enable_unix_sockets = (is_posix && !is_starboard) && !is_ios
 
 # x86/x64 cast_shell builds run on regular trybots and can use python runtime
 # and remote test server. ARM cast_shell builds don't have python runtime.
@@ -107,7 +107,7 @@ net_configs = [
   "//build/config/compiler:wexit_time_destructors",
 ]
 
-if (is_linux || is_chromeos) {
+if (is_linux && !is_cobalt_hermetic_build || is_chromeos) {
   net_configs += [ "//build/config/linux:libresolv" ]
 }
 
@@ -1199,7 +1199,7 @@ component("net") {
     ]
   }
 
-  if (is_linux) {
+  if (is_linux && !is_cobalt_hermetic_build) {
     sources += [
       "base/network_change_notifier_linux.cc",
       "base/network_change_notifier_linux.h",
@@ -1208,7 +1208,7 @@ component("net") {
     ]
   }
 
-  if (is_linux || is_chromeos || is_android) {
+  if ((is_linux || is_chromeos || is_android) && !is_cobalt_hermetic_build) {
     sources += [
       "base/address_map_linux.cc",
       "base/address_map_linux.h",
@@ -1220,7 +1220,7 @@ component("net") {
     ]
   }
 
-  if (is_linux) {
+  if (is_linux && !is_cobalt_hermetic_build) {
     sources += [
       "base/address_map_cache_linux.cc",
       "base/address_map_cache_linux.h",
@@ -1353,7 +1353,7 @@ component("net") {
     }
   }
 
-  if (is_android || is_chromeos || is_linux) {
+  if ((is_android || is_chromeos || is_linux) && !is_cobalt_hermetic_build) {
     sources += [
       "base/network_change_notifier_passive.cc",
       "base/network_change_notifier_passive.h",
@@ -1629,6 +1629,28 @@ component("net") {
     configs -= [ "//build/config/compiler:default_optimization" ]
     configs += [ "//build/config/compiler:optimize_max" ]
   }
+
+  if(is_starboard) {
+    sources += [
+      "cert/test_root_certs_builtin.cc",
+      "cert/internal/system_trust_store_starboard.cc"
+    ]
+  }
+  if (is_cobalt_hermetic_build) {
+    sources += [
+      "base/network_interfaces_starboard.cc",
+      "base/platform_mime_util_starboard.cc",
+      "base/network_change_notifier_starboard.h",
+      "base/network_change_notifier_passive_starboard_stub.cc",
+      "proxy_resolution/proxy_config_service_linux_starboard_stub.cc"
+    ]
+  }
+  if (is_cobalt && is_linux && current_toolchain == host_toolchain) {
+    sources -= [
+      #  # TODO: b/413491685 - Cobalt: Fix errors building host tools.
+      "base/network_change_notifier_passive.cc",
+    ]
+  }
 }
 
 # net_export.h has its own build target so that code (eg
@@ -1999,7 +2021,7 @@ static_library("test_support") {
     "url_request/url_request_test_util.h",
   ]
 
-  if (is_linux || is_chromeos || is_android) {
+  if ((is_linux || is_chromeos || is_android) && !is_starboard) {
     sources += [
       "base/address_tracker_linux_test_util.cc",
       "base/address_tracker_linux_test_util.h",
@@ -2072,7 +2094,7 @@ static_library("test_support") {
       "test/spawned_test_server/remote_test_server_spawner_request.cc",
       "test/spawned_test_server/remote_test_server_spawner_request.h",
     ]
-  } else if (!is_ios) {
+  } else if (!is_ios && !is_starboard) {
     sources += [
       "test/spawned_test_server/local_test_server.cc",
       "test/spawned_test_server/local_test_server.h",
@@ -2840,14 +2862,14 @@ test("net_unittests") {
     ]
   }
 
-  if (is_linux) {
+  if (is_linux && !is_starboard) {
     sources += [
       "base/network_change_notifier_linux_unittest.cc",
       "proxy_resolution/proxy_config_service_linux_unittest.cc",
     ]
   }
 
-  if (is_linux || is_chromeos) {
+  if ((is_linux || is_chromeos) && !is_starboard) {
     sources += [
       "base/address_tracker_linux_unittest.cc",
       "base/network_interfaces_linux_unittest.cc",
@@ -3095,7 +3117,7 @@ test("net_unittests") {
       "websockets/websocket_test_util.h",
     ]
 
-    if (!is_ios) {
+    if (!is_ios && !is_starboard) {
       # TODO(crbug.com/1281277): iOS does not have support for the spawned test
       # server, which is used by this test. The long term plan is to add
       # websocket support to the embedded test server and when that happens,
