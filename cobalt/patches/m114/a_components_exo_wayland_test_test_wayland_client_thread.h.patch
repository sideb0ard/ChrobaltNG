diff --git a/components/exo/wayland/test/test_wayland_client_thread.h b/components/exo/wayland/test/test_wayland_client_thread.h
index 770c9bb3ad924..51a1f274081cf 100644
--- a/components/exo/wayland/test/test_wayland_client_thread.h
+++ b/components/exo/wayland/test/test_wayland_client_thread.h
@@ -9,7 +9,7 @@
 #include <string>
 
 #include "base/functional/callback.h"
-#include "base/message_loop/message_pump_libevent.h"
+#include "base/message_loop/message_pump_epoll.h"
 #include "base/threading/thread.h"
 #include "components/exo/wayland/test/test_client.h"
 
@@ -18,7 +18,7 @@ namespace exo::wayland::test {
 // TestWaylandClientThread runs a Wayland client on a dedicated thread for
 // testing with WaylandServerTest.
 class TestWaylandClientThread : public base::Thread,
-                                base::MessagePumpLibevent::FdWatcher {
+                                base::MessagePumpEpoll::FdWatcher {
  public:
   explicit TestWaylandClientThread(const std::string& name);
 
@@ -42,7 +42,7 @@ class TestWaylandClientThread : public base::Thread,
   void RunAndWait(base::OnceClosure closure);
 
  private:
-  // base::MessagePumpLibevent::FdWatcher:
+  // base::MessagePumpEpoll::FdWatcher:
   void OnFileCanReadWithoutBlocking(int fd) override;
   void OnFileCanWriteWithoutBlocking(int fd) override;
 
@@ -50,7 +50,7 @@ class TestWaylandClientThread : public base::Thread,
   void DoRun(base::OnceClosure closure);
   void DoCleanUp();
 
-  base::MessagePumpLibevent::FdWatchController controller_;
+  base::MessagePumpEpoll::FdWatchController controller_;
   std::unique_ptr<TestClient> client_;
 };
 
