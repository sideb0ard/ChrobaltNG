diff --git a/media/filters/source_buffer_range.h b/media/filters/source_buffer_range.h
index f6d36ec992cd5..916d189f90bf9 100644
--- a/media/filters/source_buffer_range.h
+++ b/media/filters/source_buffer_range.h
@@ -247,7 +247,8 @@ class MEDIA_EXPORT SourceBufferRange {
                          base::TimeDelta end,
                          BufferQueue* buffers) const;
 
-  size_t size_in_bytes() const { return size_in_bytes_; }
+  // Returns the memory usage of the buffered data in bytes.
+  size_t GetMemoryUsage() const { return memory_usage_in_bytes_; }
 
  private:
   // Friend of private is only for IsNextInPresentationSequence testing.
@@ -263,8 +264,8 @@ class MEDIA_EXPORT SourceBufferRange {
   void AdjustEstimatedDurationForNewAppend(const BufferQueue& new_buffers);
 
   // Frees the buffers in |buffers_| from [|start_point|,|ending_point|) and
-  // updates the |size_in_bytes_| accordingly. Note, this does not update
-  // |keyframe_map_|.
+  // updates the |memory_usage_in_bytes_| accordingly. Note, this does not
+  // update |keyframe_map_|.
   void FreeBufferRange(const BufferQueue::const_iterator& starting_point,
                        const BufferQueue::const_iterator& ending_point);
 
@@ -373,8 +374,8 @@ class MEDIA_EXPORT SourceBufferRange {
   // Called to get the largest interbuffer distance seen so far in the stream.
   InterbufferDistanceCB interbuffer_distance_cb_;
 
-  // Stores the amount of memory taken up by the data in |buffers_|.
-  size_t size_in_bytes_;
+  // Stores the amount of memory taken up to store |buffers_|.
+  size_t memory_usage_in_bytes_ = 0;
 
   // If the first buffer in this range is the beginning of a coded frame group,
   // |range_start_pts_| is the presentation time when the coded frame group
