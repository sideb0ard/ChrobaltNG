diff --git a/gpu/config/gpu_control_list_entry_unittest.cc b/gpu/config/gpu_control_list_entry_unittest.cc
index 223c54d87026a..acd228ae7931a 100644
--- a/gpu/config/gpu_control_list_entry_unittest.cc
+++ b/gpu/config/gpu_control_list_entry_unittest.cc
@@ -669,7 +669,6 @@ TEST_F(GpuControlListEntryTest, DirectRendering) {
   // Indirect rendering does not match.
   gpu_info.direct_rendering_version = "1";
   EXPECT_FALSE(entry.Contains(kOsLinux, "7.0", gpu_info));
-
   gpu_info.direct_rendering_version = "2";
   EXPECT_TRUE(entry.Contains(kOsLinux, "7.0", gpu_info));
   gpu_info.direct_rendering_version = "2.3";
@@ -1154,6 +1153,19 @@ TEST_F(GpuControlListEntryTest, IntelDriverVersionEntry) {
   EXPECT_TRUE(entry.Contains(kOsWin, "", gpu_info));
 }
 
+TEST_F(GpuControlListEntryTest, NativeAngleRenderer) {
+  const Entry& entry = GetEntry(kGpuControlListEntryTest_NativeAngleRenderer);
+  GPUInfo gpu_info;
+  gpu_info.gl_renderer =
+      "ANGLE (Samsung Electronics Co. Ltd., "
+      "ANGLE (Samsung Xclipse 920) on Vulkan 1.1.179, "
+      "OpenGL ES 3.2 ANGLE git hash: 41a335098084)";
+  EXPECT_TRUE(entry.Contains(kOsAndroid, "4.4.2", gpu_info));
+
+  gpu_info.gl_renderer = "ANGLE (Samsung Xclipse 920) on Vulkan 1.1.179";
+  EXPECT_TRUE(entry.Contains(kOsAndroid, "4.4.2", gpu_info));
+}
+
 #if BUILDFLAG(IS_WIN)
 TEST_F(GpuControlListEntryTest, DeviceRevisionEntry) {
   const Entry& entry = GetEntry(kGpuControlListEntryTest_DeviceRevisionEntry);
