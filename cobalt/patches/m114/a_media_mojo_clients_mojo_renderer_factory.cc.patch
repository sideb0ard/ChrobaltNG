diff --git a/media/mojo/clients/mojo_renderer_factory.cc b/media/mojo/clients/mojo_renderer_factory.cc
index 703e147283934..20b8b32534976 100644
--- a/media/mojo/clients/mojo_renderer_factory.cc
+++ b/media/mojo/clients/mojo_renderer_factory.cc
@@ -128,4 +128,29 @@ std::unique_ptr<MojoRenderer> MojoRendererFactory::CreateMediaPlayerRenderer(
 }
 #endif  // BUILDFLAG(IS_ANDROID)
 
+#if BUILDFLAG(USE_STARBOARD_MEDIA)
+std::unique_ptr<MojoRenderer> MojoRendererFactory::CreateStarboardRenderer(
+    mojo::PendingRemote<mojom::MediaLog> media_log_remote,
+    const StarboardRendererConfig& config,
+    mojo::PendingReceiver<mojom::StarboardRendererExtension>
+          renderer_extension_receiver,
+    mojo::PendingRemote<mojom::StarboardRendererClientExtension>
+          client_extension_remote,
+    const scoped_refptr<base::SequencedTaskRunner>& media_task_runner,
+    VideoRendererSink* video_renderer_sink) {
+  DCHECK(interface_factory_);
+
+  mojo::PendingRemote<mojom::Renderer> renderer_remote;
+  interface_factory_->CreateStarboardRenderer(
+      std::move(media_log_remote), config,
+      renderer_remote.InitWithNewPipeAndPassReceiver(),
+      std::move(renderer_extension_receiver),
+      std::move(client_extension_remote));
+
+  return std::make_unique<MojoRenderer>(
+      media_task_runner, nullptr, video_renderer_sink,
+      std::move(renderer_remote));
+}
+#endif  // BUILDFLAG(USE_STARBOARD_MEDIA)
+
 }  // namespace media
